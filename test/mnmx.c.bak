#include <stdio.h>
#include "nnet.h"

void createsine(double *x, int N, double *fx) {
	int i;
	for (i = 0; i < N; ++i) {
		fx[i] = sin(x[i]);
		printf("X %g f(X) %g \n", x[i], fx[i]);
	}
}

int main() {
	int N, i, leninp, lenoup;
	int tsize;
	nnet_object obj;

	N = 3;
	tsize = 4;

	double p[8] = { -1, 0, -1, 5, 2, 0, 2, 5 };
	double gp[4] = { -1, -1, 1, 1 };

	int arch[3] = { 2, 3, 1 };
	int actfcn[3] = { 0, 3, 1 };

	leninp = arch[0];
	lenoup = arch[2];

	obj = nnet_init(N, arch, actfcn);
	set_training_ratios(obj, 1.0, 0.0, 0.0);
	obj->emax = 500;
	obj->tmse = 1e-05;
	train_mnmx(obj, tsize, p, gp);

	for (i = 0; i < obj->lw; ++i) {
		printf("W %g ", obj->weight[i]);
	}

	double out[4] = { 0,0,0,0};

	sim(obj, tsize, p, out);

	for (i = 0; i < tsize; ++i) {
		printf("\n%g %g ", gp[i], out[i]);
	}

	nnet_free(obj);
	return 0;
}