#include <stdio.h>
#include "nnet.h"

void irisout(double *out, int N, double *clamp) {
	int i;
	double temp;

	temp = out[0];
	clamp[0] = 1.0;

	for (i = 1; i < N; ++i) {
		if (out[i] > temp) {
			clamp[i] = 1.0;
			clamp[i - 1] = 0.0;
		}
		else {
			clamp[i] = 0.0;
		}
	}
}

void building() {
	ndata_object data;
	nnet_object net;
	int inp, oup, patterns;
	int N;
	int isheader = 1;
	char* file = "datasets/building.train";
	char *delimiter = " ";

	inp = 14;
	oup = 3;
	patterns = 2104;

	data = ndata_init(inp, oup, patterns);
	file_sep_line_enter(data, file, delimiter, isheader);
	ndata_check(data);

	N = 3;
	int arch[3] = { inp, 16, oup }; // 
	int actfcn[3] = { 0, 3, 1 };// {Null,'tansig','purelin'}

	net = nnet_init(N, arch, actfcn);

	set_trainfcn(net, "traingdm");
	set_training_ratios(net, 1.0, 0.0, 0.0);
	set_max_epoch(net, 1000);
	set_target_mse(net, 1e-05);// Target MSE error
	set_learning_rate(net, 0.01);// learning rate
	//set_momentum(net, 0.9);// No momentum term

	train(net, patterns, data->data, data->target);

	ndata_free(data);
	nnet_free(net);
}

void gene() {
	ndata_object data;
	nnet_object net;
	int inp, oup, patterns;
	int N;
	int isheader = 1;
	char* file = "datasets/gene.train";
	char *delimiter = " ";

	inp = 120;
	oup = 3;
	patterns = 1588;

	data = ndata_init(inp, oup, patterns);
	file_sep_line_enter(data, file, delimiter, isheader);
	ndata_check(data);

	N = 4;
	int arch[4] = { inp, 4, 2, oup }; // 
	int actfcn[4] = { 0, 3, 3, 1 };// {Null,'tansig','purelin'}

	net = nnet_init(N, arch, actfcn);

	set_trainfcn(net, "traingdm");
	set_training_ratios(net, 1.0, 0.0, 0.0);
	set_max_epoch(net, 1000);
	set_target_mse(net, 1e-05);// Target MSE error
	set_learning_rate(net, 0.07);// learning rate
	//set_momentum(net, 0.9);// No momentum term

	train_mstd(net, patterns, data->data, data->target);

	ndata_free(data);
	nnet_free(net);
}

void mushroom() {
	ndata_object data;
	nnet_object net;
	int inp, oup, patterns;
	int N;
	int isheader = 1;
	char* file = "datasets/mushroom.train";
	char *delimiter = " ";

	inp = 125;
	oup = 2;
	patterns = 4062;

	data = ndata_init(inp, oup, patterns);
	file_sep_line_enter(data, file, delimiter, isheader);
	ndata_check(data);

	N = 3;
	int arch[3] = { inp, 32, oup }; // 
	int actfcn[3] = { 0, 3, 1 };// {Null,'tansig','purelin'}

	net = nnet_init(N, arch, actfcn);

	set_trainfcn(net, "traingdx");
	set_training_ratios(net, 1.0, 0.0, 0.0);
	set_max_epoch(net, 1000);
	set_target_mse(net, 1e-05);// Target MSE error
	set_learning_rate(net, 0.01);// learning rate
	set_momentum(net, 0.95);// No momentum term

	train_mstd(net, patterns, data->data, data->target);

	ndata_free(data);
	nnet_free(net);
}

void soybean() {
	ndata_object data;
	nnet_object net;
	int inp, oup, patterns;
	int N;
	int isheader = 1;
	char* file = "datasets/soybean.train";
	char *delimiter = " ";

	inp = 82;
	oup = 19;
	patterns = 342;

	data = ndata_init(inp, oup, patterns);
	file_sep_line_enter(data, file, delimiter, isheader);
	ndata_check(data);

	N = 4;
	int arch[4] = { inp, 16, 8, oup }; // 
	int actfcn[4] = { 0, 3, 3, 1 };// {Null,'tansig','purelin'}

	net = nnet_init(N, arch, actfcn);

	set_trainfcn(net, "traingda");
	set_training_ratios(net, 1.0, 0.0, 0.0);
	set_max_epoch(net, 1000);
	set_target_mse(net, 1e-05);// Target MSE error
	set_learning_rate(net, 0.07);// learning rate
	set_momentum(net, 0.9);// No momentum term

	train(net, patterns, data->data, data->target);

	ndata_free(data);
	nnet_free(net);
}

void thyroid() {
	ndata_object data;
	nnet_object net;
	int inp, oup, patterns;
	int N;
	int isheader = 1;
	char* file = "datasets/thyroid.train";
	char *delimiter = " ";

	inp = 21;
	oup = 3;
	patterns = 3600;

	data = ndata_init(inp, oup, patterns);
	file_sep_line_enter(data, file, delimiter, isheader);
	ndata_check(data);

	N = 4;
	int arch[4] = { inp, 16, 8, oup }; // 
	int actfcn[4] = { 0, 3, 3, 1 };// {Null,'tansig','purelin'}

	net = nnet_init(N, arch, actfcn);

	set_trainfcn(net, "traingda");
	set_training_ratios(net, 1.0, 0.0, 0.0);
	set_max_epoch(net, 1000);
	set_target_mse(net, 1e-05);// Target MSE error
	set_learning_rate(net, 0.07);// learning rate
	//set_momentum(net, 0.9);// No momentum term

	train(net, patterns, data->data, data->target);

	ndata_free(data);
	nnet_free(net);
}

int main() {
	//building();
	//gene();
	//soybean();
	thyroid();
	//mushroom();
	return 0;
}